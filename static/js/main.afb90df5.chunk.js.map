{"version":3,"sources":["assets/empty.png","assets/rock.png","assets/paper.png","assets/scissor.png","GameComponent.jsx","assets/rules.png","Rules.jsx","App.jsx","index.js"],"names":["GameComponent","useEffect","setName","prompt","pictures","scissor","rock","paper","useState","row","setRow","score","setScore","youWin","setWin","name","started","setStarted","comp_score","setCompScore","random_player","setRandomPlayer","random_computer","setRandomComputer","startFunction","user_num","Math","round","random","Number","length","comp_num","alert","className","src","alt","empty","onClick","Rules","rules","App","toggleScreen","setScreen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb90df5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/empty.d5b017a9.png\";","export default __webpack_public_path__ + \"static/media/rock.c41a2a78.png\";","export default __webpack_public_path__ + \"static/media/paper.468001d3.png\";","export default __webpack_public_path__ + \"static/media/scissor.b0a2a6ff.png\";","import React, { useState, useEffect } from \"react\";\nimport empty from \"./assets/empty.png\";\nimport rock from \"./assets/rock.png\";\nimport paper from \"./assets/paper.png\";\nimport scissor from \"./assets/scissor.png\";\nimport \"./App.scss\";\n\nfunction GameComponent() {\n  useEffect(() => {\n    setName(prompt(\"Player name\"));\n  }, [prompt]);\n  const pictures = [scissor, rock, paper];\n  const [row, setRow] = useState(false);\n  const [score, setScore] = useState(0);\n  const [youWin, setWin] = useState(false);\n  const [name, setName] = useState(\"player\");\n  const [started, setStarted] = useState(false);\n  const [comp_score, setCompScore] = useState(0);\n  const [random_player, setRandomPlayer] = useState(rock);\n  const [random_computer, setRandomComputer] = useState(paper);\n  const startFunction = () => {\n    const user_num = Math.round(\n      Math.random(Number(pictures.length - 1)) * Number(pictures.length - 1)\n    );\n    const comp_num = Math.round(\n      Math.random(Number(pictures.length - 1)) * Number(pictures.length - 1)\n    );\n    setRandomPlayer(pictures[user_num]);\n    setRandomComputer(pictures[comp_num]);\n    setStarted(true);\n    if (\n      (user_num === 1 && comp_num === 0) ||\n      (user_num === 0 && comp_num === 2) ||\n      (user_num === 2 && comp_num === 1)\n    ) {\n      setWin(true);\n      setRow(false);\n      setScore(score + 1);\n    } else if (\n      (user_num === 0 && comp_num === 1) ||\n      (user_num === 2 && comp_num === 0) ||\n      (user_num === 1 && comp_num === 2)\n    ) {\n      setWin(false);\n      setRow(false);\n      setCompScore(comp_score + 1);\n    } else {\n      setRow(true);\n      setWin(false);\n    }\n    if (score === 10 && score > comp_score) {\n      alert(\"Congrats bud ! You won the game!\");\n      setScore(0);\n      setCompScore(0);\n      setStarted(false);\n    } else if (comp_score === 10 && comp_score > score) {\n      alert(\"Huh, it seems its not your day bud!\");\n      setScore(0);\n      setCompScore(0);\n      setStarted(false);\n    }\n  };\n  return (\n    <div className=\"component_wrapper\">\n      <div className=\"header\">\n        <div className=\"user_score\">\n          <p>score</p>\n          <h1>{score}</h1>\n        </div>\n        <div className=\"game_name\">\n          <h1>rock</h1>\n          <h1>paper</h1>\n          <h1>scissors</h1>\n        </div>\n        <div className=\"user_score\">\n          <p>score</p>\n          <h1>{comp_score}</h1>\n        </div>\n      </div>\n      <div className=\"game_part\">\n        <div className='player'>\n          <h3>{name ? name : \"player\"}</h3>\n          {!started ? (\n            <img src={empty} alt=\"Empty\"/>\n          ) : (\n            <img src={random_player} alt=\"Random\"  className={ youWin ? 'winner' : null }/>\n          )}\n        </div>\n        {started ? (\n          <div className=\"controller\">\n            <h1>\n              {youWin && !row\n                ? \"you win\"\n                : row && !youWin\n                ? \"-- set --\"\n                : \"you lose\"}\n            </h1>\n            <button onClick={startFunction}>play again</button>\n          </div>\n        ) : (\n          <div className=\"start\">\n            <button onClick={startFunction}>start</button>\n          </div>\n        )}\n        <div className=\"computer\">\n          <h3>computer</h3>\n          {!started ? (\n            <img src={empty} alt=\"Empty\" />\n          ) : (\n            <img src={random_computer} alt=\"Random\" className={ !youWin && !row ? 'winner' : null }/>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GameComponent;\n","export default __webpack_public_path__ + \"static/media/rules.55067fb1.png\";","import React from 'react'\nimport rules from './assets/rules.png';\n\nfunction Rules() {\n\treturn (\n\t\t<div className=\"rules\">\n\t\t\t<img src={rules} alt=\"Rules of the game\"/>\n\t\t</div>\n\t)\n}\n\nexport default Rules","import React, { useState} from \"react\";\nimport \"./App.scss\";\nimport GameComponent from \"./GameComponent\";\nimport Rules from './Rules';\n\nfunction App() {\n  const [ toggleScreen, setScreen ] = useState(false);\n  return (\n    <main>\n    { toggleScreen ? <Rules/> : <GameComponent />}\n      <button onClick={() => setScreen(!toggleScreen)} className='toggleScreen'>{toggleScreen ? 'play' : 'rules'}</button>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}